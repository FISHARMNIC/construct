{
    "type": "File",
    "start": 0,
    "end": 2056,
    "loc": {
        "start": {
            "line": 1,
            "column": 0,
            "index": 0
        },
        "end": {
            "line": 60,
            "column": 12,
            "index": 2056
        }
    },
    "range": [
        0,
        2056
    ],
    "errors": [],
    "program": {
        "type": "Program",
        "start": 0,
        "end": 2056,
        "loc": {
            "start": {
                "line": 1,
                "column": 0,
                "index": 0
            },
            "end": {
                "line": 60,
                "column": 12,
                "index": 2056
            }
        },
        "range": [
            0,
            2056
        ],
        "sourceType": "module",
        "interpreter": null,
        "body": [
            {
                "type": "VariableDeclaration",
                "start": 1990,
                "end": 2006,
                "loc": {
                    "start": {
                        "line": 54,
                        "column": 0,
                        "index": 1990
                    },
                    "end": {
                        "line": 54,
                        "column": 16,
                        "index": 2006
                    }
                },
                "range": [
                    1990,
                    2006
                ],
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "start": 1994,
                        "end": 2005,
                        "loc": {
                            "start": {
                                "line": 54,
                                "column": 4,
                                "index": 1994
                            },
                            "end": {
                                "line": 54,
                                "column": 15,
                                "index": 2005
                            }
                        },
                        "range": [
                            1994,
                            2005
                        ],
                        "id": {
                            "type": "Identifier",
                            "start": 1994,
                            "end": 1995,
                            "loc": {
                                "start": {
                                    "line": 54,
                                    "column": 4,
                                    "index": 1994
                                },
                                "end": {
                                    "line": 54,
                                    "column": 5,
                                    "index": 1995
                                },
                                "identifierName": "a"
                            },
                            "range": [
                                1994,
                                1995
                            ],
                            "name": "a"
                        },
                        "init": {
                            "type": "ArrayExpression",
                            "start": 1998,
                            "end": 2005,
                            "loc": {
                                "start": {
                                    "line": 54,
                                    "column": 8,
                                    "index": 1998
                                },
                                "end": {
                                    "line": 54,
                                    "column": 15,
                                    "index": 2005
                                }
                            },
                            "range": [
                                1998,
                                2005
                            ],
                            "elements": [
                                {
                                    "type": "NumericLiteral",
                                    "start": 1999,
                                    "end": 2000,
                                    "loc": {
                                        "start": {
                                            "line": 54,
                                            "column": 9,
                                            "index": 1999
                                        },
                                        "end": {
                                            "line": 54,
                                            "column": 10,
                                            "index": 2000
                                        }
                                    },
                                    "range": [
                                        1999,
                                        2000
                                    ],
                                    "extra": {
                                        "rawValue": 1,
                                        "raw": "1"
                                    },
                                    "value": 1
                                },
                                {
                                    "type": "NumericLiteral",
                                    "start": 2001,
                                    "end": 2002,
                                    "loc": {
                                        "start": {
                                            "line": 54,
                                            "column": 11,
                                            "index": 2001
                                        },
                                        "end": {
                                            "line": 54,
                                            "column": 12,
                                            "index": 2002
                                        }
                                    },
                                    "range": [
                                        2001,
                                        2002
                                    ],
                                    "extra": {
                                        "rawValue": 2,
                                        "raw": "2"
                                    },
                                    "value": 2
                                },
                                {
                                    "type": "NumericLiteral",
                                    "start": 2003,
                                    "end": 2004,
                                    "loc": {
                                        "start": {
                                            "line": 54,
                                            "column": 13,
                                            "index": 2003
                                        },
                                        "end": {
                                            "line": 54,
                                            "column": 14,
                                            "index": 2004
                                        }
                                    },
                                    "range": [
                                        2003,
                                        2004
                                    ],
                                    "extra": {
                                        "rawValue": 3,
                                        "raw": "3"
                                    },
                                    "value": 3
                                }
                            ]
                        }
                    }
                ],
                "kind": "let",
                "leadingComments": [
                    {
                        "type": "CommentBlock",
                        "value": "\n\nTHIS STUFF IS OLD --------\nThis is tricky because a needs to be casted to a dynamic array but its values kept\n    -> if \"a\" contains an array or object, changing that item needs to change \"b\" too\n    -> so cant just be a clone\n    -> need a reference-to-dynamic function that maintains the reference\n        -> new type in dynamic called arrayReference\n        -> example: convert js::array<js::number> into js:dynamic\n        -> process:\n            -> should be all done at runtime\n            -> template that inserts according type into variant?\n            like: given a js::array<js::number> that needs to be converted into a js::dynamic holding js::arrayReference\n            \n            template T\n            requires(T is a js::array) // or object \n            js::dynamic obj2dynref(T object)\n            {\n                js::dynamic ret = js::arrayReference(&object);\n            }\n            -> also stores what type the array is using variant or something\n            -> the array cannot have any dynamic types for now -> much more complicated\n                -> NO RUINS THE WHOLE POINT OF THIS\n\n            // wont work if new items are deleted or old ones are removed\n            // think of something else that doesnt loop over each item, instead stores address of array what type it stores\n            js::dynamic<js::arrayReference> clone;\n            for each item\n            {\n                if(item type is reference) // array of arrays or objects\n                {\n                    recursion(item);\n                }\n                else\n                {\n                    clone.pushBack(&item);\n                }\n            }\n            return clone;\n    -> the arrayReference type will need its corresponding overloads for everything too.\n    -> what is dynamic arr was removed from dynamic, so just arrayReferene now\n\n    I think best solution is to backtrack and add array<dynamic> as a type to A\n",
                        "start": 0,
                        "end": 1944,
                        "loc": {
                            "start": {
                                "line": 1,
                                "column": 0,
                                "index": 0
                            },
                            "end": {
                                "line": 44,
                                "column": 2,
                                "index": 1944
                            }
                        }
                    },
                    {
                        "type": "CommentBlock",
                        "value": "\n@expects\n[100, Hi, [1, 2, 4]]\n\n@end\n\n",
                        "start": 1947,
                        "end": 1989,
                        "loc": {
                            "start": {
                                "line": 47,
                                "column": 0,
                                "index": 1947
                            },
                            "end": {
                                "line": 53,
                                "column": 2,
                                "index": 1989
                            }
                        }
                    }
                ]
            },
            {
                "type": "VariableDeclaration",
                "start": 2008,
                "end": 2031,
                "loc": {
                    "start": {
                        "line": 56,
                        "column": 0,
                        "index": 2008
                    },
                    "end": {
                        "line": 56,
                        "column": 23,
                        "index": 2031
                    }
                },
                "range": [
                    2008,
                    2031
                ],
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "start": 2012,
                        "end": 2030,
                        "loc": {
                            "start": {
                                "line": 56,
                                "column": 4,
                                "index": 2012
                            },
                            "end": {
                                "line": 56,
                                "column": 22,
                                "index": 2030
                            }
                        },
                        "range": [
                            2012,
                            2030
                        ],
                        "id": {
                            "type": "Identifier",
                            "start": 2012,
                            "end": 2013,
                            "loc": {
                                "start": {
                                    "line": 56,
                                    "column": 4,
                                    "index": 2012
                                },
                                "end": {
                                    "line": 56,
                                    "column": 5,
                                    "index": 2013
                                },
                                "identifierName": "b"
                            },
                            "range": [
                                2012,
                                2013
                            ],
                            "name": "b"
                        },
                        "init": {
                            "type": "ArrayExpression",
                            "start": 2016,
                            "end": 2030,
                            "loc": {
                                "start": {
                                    "line": 56,
                                    "column": 8,
                                    "index": 2016
                                },
                                "end": {
                                    "line": 56,
                                    "column": 22,
                                    "index": 2030
                                }
                            },
                            "range": [
                                2016,
                                2030
                            ],
                            "elements": [
                                {
                                    "type": "NumericLiteral",
                                    "start": 2017,
                                    "end": 2020,
                                    "loc": {
                                        "start": {
                                            "line": 56,
                                            "column": 9,
                                            "index": 2017
                                        },
                                        "end": {
                                            "line": 56,
                                            "column": 12,
                                            "index": 2020
                                        }
                                    },
                                    "range": [
                                        2017,
                                        2020
                                    ],
                                    "extra": {
                                        "rawValue": 100,
                                        "raw": "100"
                                    },
                                    "value": 100
                                },
                                {
                                    "type": "StringLiteral",
                                    "start": 2022,
                                    "end": 2026,
                                    "loc": {
                                        "start": {
                                            "line": 56,
                                            "column": 14,
                                            "index": 2022
                                        },
                                        "end": {
                                            "line": 56,
                                            "column": 18,
                                            "index": 2026
                                        }
                                    },
                                    "range": [
                                        2022,
                                        2026
                                    ],
                                    "extra": {
                                        "rawValue": "Hi",
                                        "raw": "'Hi'"
                                    },
                                    "value": "Hi"
                                },
                                {
                                    "type": "Identifier",
                                    "start": 2028,
                                    "end": 2029,
                                    "loc": {
                                        "start": {
                                            "line": 56,
                                            "column": 20,
                                            "index": 2028
                                        },
                                        "end": {
                                            "line": 56,
                                            "column": 21,
                                            "index": 2029
                                        },
                                        "identifierName": "a"
                                    },
                                    "range": [
                                        2028,
                                        2029
                                    ],
                                    "name": "a"
                                }
                            ]
                        }
                    }
                ],
                "kind": "let"
            },
            {
                "type": "ExpressionStatement",
                "start": 2033,
                "end": 2042,
                "loc": {
                    "start": {
                        "line": 58,
                        "column": 0,
                        "index": 2033
                    },
                    "end": {
                        "line": 58,
                        "column": 9,
                        "index": 2042
                    }
                },
                "range": [
                    2033,
                    2042
                ],
                "expression": {
                    "type": "AssignmentExpression",
                    "start": 2033,
                    "end": 2041,
                    "loc": {
                        "start": {
                            "line": 58,
                            "column": 0,
                            "index": 2033
                        },
                        "end": {
                            "line": 58,
                            "column": 8,
                            "index": 2041
                        }
                    },
                    "range": [
                        2033,
                        2041
                    ],
                    "operator": "=",
                    "left": {
                        "type": "MemberExpression",
                        "start": 2033,
                        "end": 2037,
                        "loc": {
                            "start": {
                                "line": 58,
                                "column": 0,
                                "index": 2033
                            },
                            "end": {
                                "line": 58,
                                "column": 4,
                                "index": 2037
                            }
                        },
                        "range": [
                            2033,
                            2037
                        ],
                        "object": {
                            "type": "Identifier",
                            "start": 2033,
                            "end": 2034,
                            "loc": {
                                "start": {
                                    "line": 58,
                                    "column": 0,
                                    "index": 2033
                                },
                                "end": {
                                    "line": 58,
                                    "column": 1,
                                    "index": 2034
                                },
                                "identifierName": "a"
                            },
                            "range": [
                                2033,
                                2034
                            ],
                            "name": "a"
                        },
                        "computed": true,
                        "property": {
                            "type": "NumericLiteral",
                            "start": 2035,
                            "end": 2036,
                            "loc": {
                                "start": {
                                    "line": 58,
                                    "column": 2,
                                    "index": 2035
                                },
                                "end": {
                                    "line": 58,
                                    "column": 3,
                                    "index": 2036
                                }
                            },
                            "range": [
                                2035,
                                2036
                            ],
                            "extra": {
                                "rawValue": 2,
                                "raw": "2"
                            },
                            "value": 2
                        }
                    },
                    "right": {
                        "type": "NumericLiteral",
                        "start": 2040,
                        "end": 2041,
                        "loc": {
                            "start": {
                                "line": 58,
                                "column": 7,
                                "index": 2040
                            },
                            "end": {
                                "line": 58,
                                "column": 8,
                                "index": 2041
                            }
                        },
                        "range": [
                            2040,
                            2041
                        ],
                        "extra": {
                            "rawValue": 4,
                            "raw": "4"
                        },
                        "value": 4
                    }
                }
            },
            {
                "type": "ExpressionStatement",
                "start": 2044,
                "end": 2056,
                "loc": {
                    "start": {
                        "line": 60,
                        "column": 0,
                        "index": 2044
                    },
                    "end": {
                        "line": 60,
                        "column": 12,
                        "index": 2056
                    }
                },
                "range": [
                    2044,
                    2056
                ],
                "expression": {
                    "type": "CallExpression",
                    "start": 2044,
                    "end": 2055,
                    "loc": {
                        "start": {
                            "line": 60,
                            "column": 0,
                            "index": 2044
                        },
                        "end": {
                            "line": 60,
                            "column": 11,
                            "index": 2055
                        }
                    },
                    "range": [
                        2044,
                        2055
                    ],
                    "callee": {
                        "type": "Identifier",
                        "start": 2044,
                        "end": 2052,
                        "loc": {
                            "start": {
                                "line": 60,
                                "column": 0,
                                "index": 2044
                            },
                            "end": {
                                "line": 60,
                                "column": 8,
                                "index": 2052
                            },
                            "identifierName": "dbgprint"
                        },
                        "range": [
                            2044,
                            2052
                        ],
                        "name": "dbgprint"
                    },
                    "arguments": [
                        {
                            "type": "Identifier",
                            "start": 2053,
                            "end": 2054,
                            "loc": {
                                "start": {
                                    "line": 60,
                                    "column": 9,
                                    "index": 2053
                                },
                                "end": {
                                    "line": 60,
                                    "column": 10,
                                    "index": 2054
                                },
                                "identifierName": "b"
                            },
                            "range": [
                                2053,
                                2054
                            ],
                            "name": "b"
                        }
                    ]
                }
            }
        ],
        "directives": [],
        "extra": {
            "topLevelAwait": false
        }
    },
    "comments": [
        {
            "type": "CommentBlock",
            "value": "\n\nTHIS STUFF IS OLD --------\nThis is tricky because a needs to be casted to a dynamic array but its values kept\n    -> if \"a\" contains an array or object, changing that item needs to change \"b\" too\n    -> so cant just be a clone\n    -> need a reference-to-dynamic function that maintains the reference\n        -> new type in dynamic called arrayReference\n        -> example: convert js::array<js::number> into js:dynamic\n        -> process:\n            -> should be all done at runtime\n            -> template that inserts according type into variant?\n            like: given a js::array<js::number> that needs to be converted into a js::dynamic holding js::arrayReference\n            \n            template T\n            requires(T is a js::array) // or object \n            js::dynamic obj2dynref(T object)\n            {\n                js::dynamic ret = js::arrayReference(&object);\n            }\n            -> also stores what type the array is using variant or something\n            -> the array cannot have any dynamic types for now -> much more complicated\n                -> NO RUINS THE WHOLE POINT OF THIS\n\n            // wont work if new items are deleted or old ones are removed\n            // think of something else that doesnt loop over each item, instead stores address of array what type it stores\n            js::dynamic<js::arrayReference> clone;\n            for each item\n            {\n                if(item type is reference) // array of arrays or objects\n                {\n                    recursion(item);\n                }\n                else\n                {\n                    clone.pushBack(&item);\n                }\n            }\n            return clone;\n    -> the arrayReference type will need its corresponding overloads for everything too.\n    -> what is dynamic arr was removed from dynamic, so just arrayReferene now\n\n    I think best solution is to backtrack and add array<dynamic> as a type to A\n",
            "start": 0,
            "end": 1944,
            "loc": {
                "start": {
                    "line": 1,
                    "column": 0,
                    "index": 0
                },
                "end": {
                    "line": 44,
                    "column": 2,
                    "index": 1944
                }
            }
        },
        {
            "type": "CommentBlock",
            "value": "\n@expects\n[100, Hi, [1, 2, 4]]\n\n@end\n\n",
            "start": 1947,
            "end": 1989,
            "loc": {
                "start": {
                    "line": 47,
                    "column": 0,
                    "index": 1947
                },
                "end": {
                    "line": 53,
                    "column": 2,
                    "index": 1989
                }
            }
        }
    ]
}