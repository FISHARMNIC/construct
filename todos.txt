Note that if statements no longer need to have branch difference checking
-> if variable is typed as such:
if(a < 10)
{
    q = "123"
}
else
{
    q = 123
}
When evaluating both branches, q will just be marked as string and number and just marked as dynamic on the next pass




Test array parameters and returns


* serious issue
    -> everywhere where im just checking .isIdentifier needs to be walked


OLD DONT DO (started in iffy-cpp-changes branch)
-------
* Need to make a second iffy that takes everything
* The more segregation, the faster
* Is it possible to template dynamic such that the possible types can be given? like:
    -> would need multiple iffys, one that templates 2 types
    -> one that templates 3,
    -> and one that templates everything
    -> !IMPORTANT! How would adding two different types of these templates work?
        -> like a dynamic with string and number + a dynamic with array and number
        -> make methods templates too?

let a = 1       -> js::dynamic<js::number, js::string> a = js::dynamic<js::number, js::string>(1);
a = "hello"     -> a = js::dynamic<js::number, js::string>("hello");

