@ TODO HERE
Once an array is switched to a variable, it forces each item to be iffy to, and marks it as an iffy containing an iffy array
    -> as it becomes a js::dynamic with js::array<js::dynamic>
    -> js::dynamic needs to support js::array<js::dynamic>
        -> also solved nesteds

@ TODO
Need to add definitions in typeco for arrays
-> almost always a number
-> should switch to a function that when given two types and the operator it just returns what type
-> + is the only outlier, everything else ends up being a number
-> anything with dynamic in it is dynamic

* serious issue
    -> everywhere where im just checking .isIdentifier needs to be walked


OLD DONT DO (started in iffy-cpp-changes branch)
-------
* Need to make a second iffy that takes everything
* The more segregation, the faster
* Is it possible to template dynamic such that the possible types can be given? like:
    -> would need multiple iffys, one that templates 2 types
    -> one that templates 3,
    -> and one that templates everything
    -> !IMPORTANT! How would adding two different types of these templates work?
        -> like a dynamic with string and number + a dynamic with array and number
        -> make methods templates too?

let a = 1       -> js::dynamic<js::number, js::string> a = js::dynamic<js::number, js::string>(1);
a = "hello"     -> a = js::dynamic<js::number, js::string>("hello");

